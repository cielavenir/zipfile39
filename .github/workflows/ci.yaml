name: CI
  
on:
  push:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ['2.7', '3.5', '3.6', '3.7', '3.8', '3.9', '3.10', 'pypy-2.7', 'pypy-3.7', 'pyston']
        os: [ubuntu-latest]
        architecture: ["x64"]
        include:
          - python-version: '3.4'
            os: ubuntu-18.04
            architecture: "x64"
          - python-version: '3.10'
            os: macos-latest
            architecture: "x64"
          - python-version: '3.10'
            os: windows-latest
            architecture: "x64"
          - python-version: '3.10'
            os: windows-latest
            architecture: "x86"
          - python-version: '3.9'
            os: windows-latest
            architecture: "x86"
          - python-version: '3.8'
            os: windows-latest
            architecture: "x86"
          - python-version: '3.7'
            os: windows-latest
            architecture: "x86"
          - python-version: '3.6'
            os: windows-latest
            architecture: "x86"
          - python-version: '3.5'
            os: windows-latest
            architecture: "x86"
          - python-version: '3.4'
            os: windows-latest
            architecture: "x64"
          - python-version: '3.4'
            os: windows-latest
            architecture: "x86"
          - python-version: '2.7'
            os: windows-latest
            architecture: "x64"
          - python-version: '2.7'
            os: windows-latest
            architecture: "x86"

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodule
      run: |
        git submodule init
        git submodule update
    - name: Check 7z
      run: |
        7z i
    - name: Set up Python ${{ matrix.python-version }}
      if: ${{ matrix.python-version != 'pyston' }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: ${{ matrix.architecture }}
    - name: Set up Pyston
      if: ${{ matrix.python-version == 'pyston' }}
      run: |
        wget -O pyston.deb https://github.com/pyston/pyston/releases/download/pyston_2.3.2/pyston_2.3.2_20.04.deb
        sudo apt update
        sudo apt install -y ./pyston.deb
        sudo ln -sf pyston /usr/bin/python
    - name: "Install Visual C++ for Python 2.7"
      if: ${{ matrix.os == 'windows-latest' && matrix.python-version == '2.7' }}
      run: |
        curl -L -O https://github.com/reider-roque/sulley-win-installer/raw/master/VCForPython27.msi
        msiexec /i VCForPython27.msi /qn
    #     choco install vcpython27 -f -y
    - name: "Install Visual C++ for Python 3.4"
      if: ${{ matrix.os == 'windows-latest' && matrix.python-version == '3.4' }}
      run: |
        choco install windows-sdk-7.1 -f -y
        choco install KB2519277 -f -y
    - name: Upgrade pip
      if: ${{ matrix.python-version != '2.7' && matrix.python-version != '3.4' }}
      run: |
        python -m pip install --upgrade pip
    - name: Upgrade pip (2.7)
      if: ${{ matrix.python-version == '2.7' }}
      run: |
        python -m pip install --upgrade pip~=20.0
        python -m pip install --upgrade setuptools~=44.0
    - name: Upgrade pip (3.4)
      if: ${{ matrix.python-version == '3.4' }}
      run: |
        python -m pip install --upgrade pip~=19.0
        python -m pip install --upgrade setuptools~=43.0
    - name: Install dependencies for 2.7/3.4/3.5
      if: ${{ matrix.os != 'windows-latest' && (matrix.python-version == '2.7' || matrix.python-version == 'pypy-2.7' || matrix.python-version == 'pyston' || matrix.python-version == '3.4' || matrix.python-version == '3.5') }}
      run: |
        sudo apt update
        sudo apt install -y nasm
        python -m pip install cffi wheel
        python -m pip install git+https://github.com/cielavenir/python-isal-py2@0.11.0-py2
        python -m pip install git+https://github.com/cielavenir/pyppmd-py2@py2
        python -m pip install git+https://github.com/cielavenir/zipfile-deflate64@py2
    - name: Install dependencies for 2.7/3.4/3.5 (Win32)
      if: ${{ matrix.os == 'windows-latest' && (matrix.architecture == 'x86' || matrix.python-version == '2.7' || matrix.python-version == '3.4' || matrix.python-version == '3.5') }}
      shell: bash
      run: |
        # choco install nasm -f -y
        # export PATH=$PATH:"C:\Program Files\NASM"
        choco install yasm -f -y
        python -m pip install cffi wheel
        python -m pip wheel --wheel-dir dist git+https://github.com/cielavenir/python-isal-py2@0.11.0-py2
        python -m pip wheel --wheel-dir dist git+https://github.com/cielavenir/pyppmd-py2@py2
        python -m pip wheel --wheel-dir dist git+https://github.com/cielavenir/zipfile-deflate64@py2
        python -m pip install dist/*.whl
    - name: Install lzma (Win32)
      if: ${{ matrix.os == 'windows-latest' && matrix.python-version == '2.7' && matrix.architecture == 'x86' }}
      shell: bash
      run: |
        curl -L -O https://tukaani.org/xz/xz-5.2.5-windows.7z
        7z x -oxz xz-5.2.5-windows.7z
        find xz -name "*.dll" | xargs rm
        mv xz/bin_i686-sse2/liblzma.a xz/bin_i686-sse2/liblzma.lib
        python -m pip wheel --wheel-dir dist --global-option=build_ext --global-option="-I$PWD/xz/include" --global-option="-L$PWD/xz/bin_i686-sse2" --global-option --compiler=msvc --global-option --define="LZMA_API_STATIC" backports.lzma
        python -m pip install dist/*.whl
    - name: Install lzma (Win64)
      if: ${{ matrix.os == 'windows-latest' && matrix.python-version == '2.7' && matrix.architecture == 'x64' }}
      shell: bash
      run: |
        curl -L -O https://tukaani.org/xz/xz-5.2.5-windows.7z
        7z x -oxz xz-5.2.5-windows.7z
        find xz -name "*.dll" | xargs rm
        mv xz/bin_x86-64/liblzma.a xz/bin_x86-64/liblzma.lib
        python -m pip wheel --wheel-dir dist --global-option=build_ext --global-option="-I$PWD/xz/include" --global-option="-L$PWD/xz/bin_x86-64" --global-option --compiler=msvc --global-option --define="LZMA_API_STATIC" backports.lzma
        python -m pip install dist/*.whl
    - name: Install zstandard for 3.4 (Win32)
      if: ${{ matrix.os == 'windows-latest' && matrix.python-version == '3.4' }}
      run: |
        python -m pip install zstandard==0.11.1
    - name: Install isal for pypy-3.7
      if: ${{ matrix.python-version == 'pypy-3.7' }}
      run: |
        python -m pip install isal==0.11.1
    - name: Upload wheel
      if: ${{ matrix.os == 'windows-latest' }}
      uses: actions/upload-artifact@v2
      with:
        name: windows_wheel
        path: dist
    - name: Patch directory owner (for Pyston)
      if: ${{ matrix.python-version == 'pyston' }}
      run: |
        sudo chown -RH $(whoami) $(python -c 'import os,inspect;print(os.path.dirname(inspect.getfile(inspect)))')
        sudo chown -hRH $(whoami) /usr/bin
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install pytest wheel
    # if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Install
      run: |
        python -m pip install '.[all]'
    - name: Test
      run: |
        pytest -v
